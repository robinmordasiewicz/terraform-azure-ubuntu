snap:
  commands:
    01: ['install', 'go', '--classic']
    02: ['install', 'shfmt']

write_files:
  - path: /etc/profile.d/nvm.sh
    owner: root:root
    permissions: '0644'
    content: |
      export NVM_DIR=/usr/local/nvm
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
  - path: /root/.tmux.conf
    content: |
      set -g default-terminal "screen-256color"
      set -g @plugin 'khanghh/tmux-dark-plus-theme'
      set -g @plugin 'tmux-plugins/tpm'
      set -g @plugin 'tmux-plugins/tmux-sensible'
      set -g window-active-style 'bg=colour235,fg=colour253'
      set -g window-style 'bg=colour235,fg=colour253'
      set -g pane-border-style 'bg=colour235, fg=colour59'
      set -g pane-active-border-style 'bg=colour235, fg=colour59'
      set -g status-style 'bg=colour32, fg=colour15'
      set -g window-status-style 'bg=default, fg=default'
      set -g window-status-current-style 'bg=colour39, fg=default'
      run '~/.tmux/plugins/tpm/tpm'
  - path: /etc/ssh/sshd_config.d/custom.conf
    content: |
      UsePAM yes
      KbdInteractiveAuthentication yes
      PrintMotd no
  - path: /root/.lacework.toml
    content: |
      [default]
        account = "${VAR_Forticnapp_account}"
        subaccount = "${VAR_Forticnapp_subaccount}"
        api_key = "${VAR_Forticnapp_api_key}"
        api_secret = "${VAR_Forticnapp_api_secret}"
        version = 2
  - path: /etc/skel/.lacework.toml
    content: |
      [default]
        account = "${VAR_Forticnapp_account}"
        subaccount = "${VAR_Forticnapp_subaccount}"
        api_key = "${VAR_Forticnapp_api_key}"
        api_secret = "${VAR_Forticnapp_api_secret}"
        version = 2
  - path: /root/npm-install.sh
    content: |
      #!/bin/bash
      set -eux
      export NVM_DIR=/usr/local/nvm
      mkdir -p "$NVM_DIR"
      git clone https://github.com/nvm-sh/nvm.git "$NVM_DIR"
      . "$NVM_DIR/nvm.sh"
      if [ -f /root/.npmrc ]; then
        mv /root/.npmrc /root/.npmrc.bak
      fi
      nvm install node
      nvm alias default node
      nvm use default --delete-prefix
      npm config set prefix /usr/local
      npm config set loglevel verbose
      npm install --location=global --no-save @devcontainers/cli
      npm install --location=global markdownlint-cli2 bash-language-server cwebp dockerfile-language-server-nodejs eslint eslint-config-prettier gatsby-cli javascript-typescript-langserver jsonlint newman prettier puppeteer setup-eslint-config sql-language-server stylelint-config-prettier svgo unified-language-server vscode-css-languageserver-bin vscode-html-languageserver-bin vscode-json-languageserver-bin yaml-language-server --no-save
      CXXFLAGS="--std=gnu++20" npm install --location=global terminalizer --no-save
      OS=$(go env GOOS); ARCH=$(go env GOARCH); curl -fsSL -o cmctl https://github.com/cert-manager/cmctl/releases/latest/download/cmctl_$${OS}_$${ARCH}
      chmod +x cmctl
      sudo mv cmctl /usr/local/bin
