#cloud-config

package_update: true
package_upgrade: true
package_reboot_if_required: true

apt:
  sources:
    authd:
      source: ppa:ubuntu-enterprise-desktop/authd
    ansible:
      source: ppa:ansible/ansible
    hashicorp:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://apt.releases.hashicorp.com $RELEASE main
      keyserver: https://apt.releases.hashicorp.com/gpg
      keyid: AA16FCBCA621E701
    github-cli:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://cli.github.com/packages stable main
      keyserver: https://cli.github.com/packages/githubcli-archive-keyring.gpg
      keyid: 23F3D4EA75716059
    azure-cli:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://packages.microsoft.com/repos/azure-cli/ $RELEASE main
      keyserver: https://packages.microsoft.com/keys/microsoft.asc
      keyid: EB3E94ADBE1229CF
    google-cloud-sdk:
      source: deb [arch=amd64 signed-by=$KEY_FILE] http://packages.cloud.google.com/apt cloud-sdk main
      keyserver: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      keyid: C0BA5CE6DC6315A3
    google-chrome:
      source: deb [arch=amd64 signed-by=$KEY_FILE] http://dl.google.com/linux/chrome/deb/ stable main
      keyserver: https://dl-ssl.google.com/linux/linux_signing_key.pub
      keyid: 7721F63BD38B4796
    speedtest-cli:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://packagecloud.io/ookla/speedtest-cli/ubuntu/ jammy main
      keyserver: https://packagecloud.io/ookla/speedtest-cli/gpgkey
      keyid: 31EB3981E723ACAA
    docker:
      source: deb [arch=amd64 signed-by=$KEY_FILE] https://download.docker.com/linux/ubuntu noble stable
      keyserver: https://download.docker.com/linux/ubuntu/gpg
      keyid: 8D81803C0EBFCD88

packages:
  - alsa-utils
  - ansible
  - apache2-utils
  - apparmor
  - apt-transport-https
  - asciidoctor
  - authd
  - autoconf
  - azure-cli
  - bash-completion
  - bat
  - ca-certificates
  - cockpit
  - cmake
  - curl
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - docker-compose-plugin
  - docker-ce-rootless-extras
  - docker-buildx-plugin
  - dos2unix
  - dpkg
  - dpkg-dev
  - dnsutils
  - ffmpeg
  - file
  - fontconfig
  - fonts-powerline
  - frei0r-plugins
  - fuse3
  - fzf
  - gh
  - gnupg
  - graphviz
  - gstreamer1.0-plugins-base
  - gstreamer1.0-plugins-good
  - gstreamer1.0-plugins-bad
  - gstreamer1.0-plugins-ugly
  - google-cloud-cli
  - google-chrome-stable
  - imagemagick
  - inkscape
  - iputils-ping
  - ladspa-sdk
  - libapache2-mod-php
  - libavif-dev
  - libfuse3-3
  - libgstreamer1.0-0
  - libappindicator3-1
  - libdbusmenu-glib4
  - libdbusmenu-gtk3-4
  - libfftw3-bin
  - libfftw3-dev
  - libfftw3-long3
  - libfftw3-quad3
  - libfftw3-single3
  - libfuse2
  - libgavl2
  - libgl1-mesa-dri
  - libgl1
  - libgif-dev
  - libglu1-mesa
  - libmovit-dev
  - libnotify4
  - libpoppler-cpp-dev
  - libsecret-1-0
  - libsecret-1-dev
  - libsecret-common
  - libsox-fmt-all
  - libglx-mesa0
  - libvulkan1
  - libvidstab-dev
  - libyelp-dev
  - locales
  - locales-all
  - lsb-release
  - lsd
  - melt
  - mesa-utils
  - mesa-utils-bin
  - mesa-vulkan-drivers
  - mtr
  - nmap
  - npm
  - php
  - php-cli
  - php-cgi
  - php-mysql
  - php-pgsql
  - python3-full
  - python3-pip
  - snapd
  - software-properties-common
  - squashfs-tools
  - swh-plugins
  - sox
  - speedtest
  - sqlite3
  - terraform
  - tesseract-ocr
  - tcpdump
  - tofrodos
  - ubuntu-restricted-extras
  - ubuntu-drivers-common
  - unzip
  - vlc
  - xdg-utils
  - yamllint
  - yelp-tools
  - zsh

snap:
  commands:
    01: ['install', 'authd-msentraid']
    02: ['install', 'shfmt']

write_files:
  - path: /etc/ssh/sshd_config.d/custom.conf
    content: |
      UsePAM yes
      KbdInteractiveAuthentication yes
      PrintMotd no

runcmd:
  - curl -s https://fluxcd.io/install.sh | sudo bash
  - python3 -m pip install --break-system-packages --ignore-installed aider-chat ansible ansible-creator ansible-dev-environment azure-cognitiveservices-speech docs-chat-bot fastapi git-filter-repo google-api-python-client markitdown mkdocs-add-teaser mkdocs-awesome-pages-plugin mkdocs-childpages-card-grid-plugin mkdocs-enumerate-headings-plugin mkdocs-exclude mkdocs-git-authors-plugin mkdocs-git-committers-plugin-2 mkdocs-github-admonitions-plugin mkdocs-git-revision-date-localized-plugin mkdocs-glightbox mkdocs-literate-nav mkdocs-material 'mkdocs-material[imaging]' mkdocs-minify-plugin mkdocs-monorepo-plugin mkdocs-pdf-export-plugin mkdocs-same-dir mkdocs-section-index mkdocs-table-reader-plugin mkdocs-with-pdf 'mkdocstrings[crystal]' 'mkdocstrings[python]' oauth2client oterm playwright progressbar2 pydantic pytest-playwright uvicorn
  - curl -fsSL https://ollama.com/install.sh | sh
  - curl https://raw.githubusercontent.com/lacework/go-sdk/main/cli/install.sh | bash -s --
  - curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
  - touch /etc/skel/.hushlogin
  - git clone --depth=1 https://github.com/tfutils/tfenv.git /etc/skel/.tfenv
  - . /etc/os-release && curl -fsSL "https://packages.microsoft.com/config/ubuntu/$VERSION_ID/packages-microsoft-prod.deb" -o /tmp/packages-microsoft-prod.deb
  - [ bash, -lc, "export DEBIAN_FRONTEND=noninteractive APT_LISTCHANGES_FRONTEND=none && dpkg -i /tmp/packages-microsoft-prod.deb" ]
  - rm -f /tmp/packages-microsoft-prod.deb
  - apt-get update
  - apt-get install -y powershell
  - |
    ARCH=$(dpkg-architecture -q DEB_BUILD_ARCH)
    download_url=$(curl --silent "https://api.github.com/repos/jgraph/drawio-desktop/releases/latest" | jq -r --arg ARCH "$ARCH" '.assets[] | select(.name | contains("deb") and contains($ARCH)) | .browser_download_url')
    curl -s -L "${download_url}" -o "drawio.deb"
    sudo dpkg -i drawio.deb
    rm drawio.deb
  - |
    LACEWORK_VERSION=$(curl -s "https://api.github.com/repos/lacework/extensible-reporting/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
    curl -L -o lw_report_gen "https://github.com/lacework/extensible-reporting/releases/download/v${LACEWORK_VERSION}/lw_report_gen_linux_x86_64"
    install lw_report_gen /usr/local/bin
    rm lw_report_gen
  - curl -s https://ohmyposh.dev/install.sh | bash -s -- -d /usr/local/bin -t /usr/local/share/oh-my-posh && curl -L -o /usr/local/share/oh-my-posh/powerlevel10k.omp.json https://raw.githubusercontent.com/amerintxperts/dotfiles/main/powerlevel10k.omp.json && oh-my-posh disable notice
  - mkdir -p "/usr/share/fonts/powerline" && curl -L https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf -o /usr/share/fonts/powerline/PowerlineSymbols.otf && mkdir -p /etc/fonts/conf.avail && curl -L https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf -o /etc/fonts/conf.avail/10-powerline-symbols.conf && fc-cache -f /usr/share/fonts
  - ZSH=/etc/skel/.oh-my-zsh sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended && mv /root/.zshrc /etc/skel/
  - echo 'eval "$(oh-my-posh init zsh --config /etc/skel/.oh-my-posh/themes/powerlevel10k.omp.json)"' >> /etc/skel/.zshrc
  - useradd -D -s "$(which zsh)"
  - sudo sed -i -E 's|^#?DSHELL=.*|DSHELL=/usr/bin/zsh|' /etc/adduser.conf
  - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  - install -o root -g root -m 0755 kubectl /usr/bin/kubectl
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
  - unzip -q /tmp/awscliv2.zip -d /tmp
  - /tmp/aws/install
  - rm -rf /tmp/aws /tmp/awscliv2.zip
  - ansible-galaxy collection install fortinet.console fortinet.fortiadc fortinet.fortianalyzer fortinet.fortiflexvm fortinet.fortimanager fortinet.fortios fortinet.fortiswitch fortinet.fortiweb
  - mkfs.ext4 /dev/disk/azure/scsi1/lun0 || true
  - mkfs.ext4 /dev/disk/azure/scsi1/lun1 || true
  - mkdir -p /var/lib/docker
  - mount /dev/disk/azure/scsi1/lun1 /var/lib/docker
  # - echo '/dev/disk/azure/scsi1/lun0 /home ext4 defaults,nofail 0 2' >> /etc/fstab
  - echo '/dev/disk/azure/scsi1/lun1 /var/lib/docker ext4 defaults,nofail 0 2' >> /etc/fstab
  - systemctl is-active --quiet docker && (systemctl reload docker || systemctl restart docker) || systemctl start docker
  - export NVM_DIR="/usr/bin/nvm" && git clone https://github.com/nvm-sh/nvm.git "$NVM_DIR" && \. "$NVM_DIR/nvm.sh" && nvm install node
  - npm install -g b@devcontainers/cli bash-language-server cwebp dockerfile-language-server-nodejs eslint eslint-config-prettier gatsby-cli javascript-typescript-langserver jsonlint newman prettier puppeteer setup-eslint-config sql-language-server stylelint-config-prettier svgo unified-language-server vscode-css-languageserver-bin vscode-html-languageserver-bin vscode-json-languageserver-bin yaml-language-server
  - |
    sudo sed -i '
    s|^issuer =.*|issuer = "https://login.microsoftonline.com/942b80cd-1b14-42a1-8dcf-4b21dece61ba/v2.0"|;
    s|^client_id =.*|client_id = "9f2b9fdd-ac54-4611-8b1a-2cf24b656ea2"|
    '
    /var/snap/authd-msentraid/current/broker.conf
  - sudo sed -i 's/^#allowed_users = OWNER$/allowed_users = ALL/' /var/snap/authd-msentraid/current/broker.conf
  - echo 'ssh_allowed_suffixes = @fortinet-us.com' >> /var/snap/authd-msentraid/current/broker.conf
  - sed -i 's/^\(LOGIN_TIMEOUT\t\t\)[0-9]\+/\1360/' /etc/login.defs
  - mkdir -p /etc/authd/brokers.d/
  - cp /snap/authd-msentraid/current/conf/authd/msentraid.conf /etc/authd/brokers.d/msentraid.conf
  - snap restart authd-msentraid
  - systemctl restart authd
  - systemctl restart ssh
  - |
    mkdir -p /etc/skel/.devcontainer
    cat <<'EOF' > /etc/skel/.devcontainer/devcontainer.json
    {
      "image": "ghcr.io/amerintlxperts/devcontainer:latest",
      "initializeCommand": "docker pull ghcr.io/amerintlxperts/devcontainer:latest",
      "runArgs": [
        "--hostname=devcontainer"
      ]
    }
    EOF
  - echo '+nostats +nocomments +nocmd +noquestion +recurse +search' > /etc/skel/.digrc
  - curl https://raw.githubusercontent.com/amerintlxperts/dotfiles/refs/heads/main/.p10k.zsh -o /etc/skel/.p10k.zsh
  - curl https://raw.githubusercontent.com/amerintlxperts/dotfiles/refs/heads/main/.vimrc -o /etc/skel/.vimrc
  - mkdir -p /etc/skel/.oh-my-posh/themes/
  - curl https://raw.githubusercontent.com/amerintlxperts/dotfiles/refs/heads/main/powerlevel10k.omp.json -o /etc/skel/.oh-my-posh/themes/powerlevel10k.omp.json
  - mkdir -p /etc/skel/.vim/pack/plugin/start
  - git clone https://github.com/vim-airline/vim-airline /etc/skel/.vim/pack/plugin/start/vim-airline
  - git clone https://github.com/preservim/nerdtree.git /etc/skel/.vim/pack/plugin/start/nerdtree
  - git clone https://github.com/junegunn/fzf.vim.git /etc/skel/.vim/pack/plugin/start/fzf
  - git clone https://github.com/airblade/vim-gitgutter.git /etc/skel/.vim/pack/plugin/start/vim-gitgutter
  - git clone https://github.com/tpope/vim-fugitive.git /etc/skel/.vim/pack/plugin/start/vim-fugitive
  - git clone --depth 1 https://github.com/sheerun/vim-polyglot /etc/skel/.vim/pack/plugin/start/vim-polyglot
  - git clone https://github.com/hashivim/vim-terraform.git /etc/skel/.vim/pack/plugin/start/vim-terraform
  - mkdir -p /etc/skel/.vim/pack/themes/start
  - git clone https://github.com/tomasiser/vim-code-dark /etc/skel/.vim/pack/themes/start/vim-code-dark
  - curl -L https://raw.githubusercontent.com/rupa/z/master/z.sh -o /etc/skel/.z
  - curl -fsSL https://get.docker.com | sh && usermod -aG docker vscode
  - export HOME="/root" && curl -fsSL https://coder.com/install.sh | sh -s -- && usermod -aG docker coder && echo 'CODER_HTTP_ADDRESS=0.0.0.0:80' > /etc/coder.d/coder.env && systemctl enable --now coder && journalctl -u coder.service -b && rm -rf "/root/.cache/coder/"
  - fwupdmgr update -y --no-reboot-check
  - |
    echo "Checking if reboot is required..."
    if [ -f /var/run/reboot-required ]; then
      echo "Reboot required. Initiating reboot..."
      reboot
    else
      echo "No reboot required."
    fi
